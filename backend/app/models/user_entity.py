# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app.models.artist import Artist  # noqa: F401,E501
from app.models.playlist import Playlist  # noqa: F401,E501
from app.models.song import Song  # noqa: F401,E501
from app import util


class UserEntity(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, username: str=None, liked_songs: List[Song]=None, followed_artists: List[Artist]=None, recommended_songs: List[Song]=None, created_playlists: List[Playlist]=None):  # noqa: E501
        """UserEntity - a model defined in Swagger

        :param id: The id of this UserEntity.  # noqa: E501
        :type id: int
        :param username: The Username of the user.  # noqa: E501
        :type: username: str
        :param liked_songs: The liked_songs of this UserEntity.  # noqa: E501
        :type liked_songs: List[Song]
        :param followed_artists: The followed_artists of this UserEntity.  # noqa: E501
        :type followed_artists: List[Artist]
        :param recommended_songs: The recommended_songs of this UserEntity.  # noqa: E501
        :type recommended_songs: List[Song]
        :param created_playlists: The created_playlists of this UserEntity.  # noqa: E501
        :type created_playlists: List[Playlist]
        """
        self.swagger_types = {
            'id': int,
            'username': str,
            'liked_songs': List[Song],
            'followed_artists': List[Artist],
            'recommended_songs': List[Song],
            'created_playlists': List[Playlist]
        }

        self.attribute_map = {
            'id': 'id',
            'username':'username',
            'liked_songs': 'likedSongs',
            'followed_artists': 'followedArtists',
            'recommended_songs': 'recommendedSongs',
            'created_playlists': 'createdPlaylists'
        }
        self._id = id
        self._username = username
        self._liked_songs = liked_songs
        self._followed_artists = followed_artists
        self._recommended_songs = recommended_songs
        self._created_playlists = created_playlists

    @classmethod
    def from_dict(cls, dikt) -> 'UserEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserEntity of this UserEntity.  # noqa: E501
        :rtype: UserEntity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this UserEntity.

        Unique identifier for the user  # noqa: E501

        :return: The id of this UserEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this UserEntity.

        Unique identifier for the user  # noqa: E501

        :param id: The id of this UserEntity.
        :type id: int
        """

        self._id = id

    @property
    def username(self) -> str:
        """Gets the username of this UserEntity.

        Username of the user  # noqa: E501

        :return: The username of this UserEntity.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the id of this UserEntity.

        Username for the user  # noqa: E501

        :param id: The username of this UserEntity.
        :type id: str
        """

        self._username = username

    @property
    def liked_songs(self) -> List[Song]:
        """Gets the liked_songs of this UserEntity.

        List of songs that the user has liked  # noqa: E501

        :return: The liked_songs of this UserEntity.
        :rtype: List[Song]
        """
        return self._liked_songs

    @liked_songs.setter
    def liked_songs(self, liked_songs: List[Song]):
        """Sets the liked_songs of this UserEntity.

        List of songs that the user has liked  # noqa: E501

        :param liked_songs: The liked_songs of this UserEntity.
        :type liked_songs: List[Song]
        """

        self._liked_songs = liked_songs

    @property
    def followed_artists(self) -> List[Artist]:
        """Gets the followed_artists of this UserEntity.

        List of artists that the user follows  # noqa: E501

        :return: The followed_artists of this UserEntity.
        :rtype: List[Artist]
        """
        return self._followed_artists

    @followed_artists.setter
    def followed_artists(self, followed_artists: List[Artist]):
        """Sets the followed_artists of this UserEntity.

        List of artists that the user follows  # noqa: E501

        :param followed_artists: The followed_artists of this UserEntity.
        :type followed_artists: List[Artist]
        """

        self._followed_artists = followed_artists

    @property
    def recommended_songs(self) -> List[Song]:
        """Gets the recommended_songs of this UserEntity.

        List of recommended songs for the user  # noqa: E501

        :return: The recommended_songs of this UserEntity.
        :rtype: List[Song]
        """
        return self._recommended_songs

    @recommended_songs.setter
    def recommended_songs(self, recommended_songs: List[Song]):
        """Sets the recommended_songs of this UserEntity.

        List of recommended songs for the user  # noqa: E501

        :param recommended_songs: The recommended_songs of this UserEntity.
        :type recommended_songs: List[Song]
        """

        self._recommended_songs = recommended_songs

    @property
    def created_playlists(self) -> List[Playlist]:
        """Gets the created_playlists of this UserEntity.

        List of playlists created by the user  # noqa: E501

        :return: The created_playlists of this UserEntity.
        :rtype: List[Playlist]
        """
        return self._created_playlists

    @created_playlists.setter
    def created_playlists(self, created_playlists: List[Playlist]):
        """Sets the created_playlists of this UserEntity.

        List of playlists created by the user  # noqa: E501

        :param created_playlists: The created_playlists of this UserEntity.
        :type created_playlists: List[Playlist]
        """

        self._created_playlists = created_playlists
