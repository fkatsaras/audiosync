# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app.models.artist import Artist  # noqa: F401,E501
from app.models.song import Song  # noqa: F401,E501
from app import util


class SearchResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, songs: List[Song]=None, artists: List[Artist]=None):  # noqa: E501
        """SearchResult - a model defined in Swagger

        :param songs: The songs of this SearchResult.  # noqa: E501
        :type songs: List[Song]
        :param artists: The artists of this SearchResult.  # noqa: E501
        :type artists: List[Artist]
        """
        self.swagger_types = {
            'songs': List[Song],
            'artists': List[Artist]
        }

        self.attribute_map = {
            'songs': 'songs',
            'artists': 'artists'
        }
        self._songs = songs
        self._artists = artists

    @classmethod
    def from_dict(cls, dikt) -> 'SearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SearchResult of this SearchResult.  # noqa: E501
        :rtype: SearchResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def songs(self) -> List[Song]:
        """Gets the songs of this SearchResult.

        List of Song objects that are search results  # noqa: E501

        :return: The songs of this SearchResult.
        :rtype: List[Song]
        """
        return self._songs

    @songs.setter
    def songs(self, songs: List[Song]):
        """Sets the songs of this SearchResult.

        List of Song objects that are search results  # noqa: E501

        :param songs: The songs of this SearchResult.
        :type songs: List[Song]
        """

        self._songs = songs

    @property
    def artists(self) -> List[Artist]:
        """Gets the artists of this SearchResult.

        List of Artist objects that are search results  # noqa: E501

        :return: The artists of this SearchResult.
        :rtype: List[Artist]
        """
        return self._artists

    @artists.setter
    def artists(self, artists: List[Artist]):
        """Sets the artists of this SearchResult.

        List of Artist objects that are search results  # noqa: E501

        :param artists: The artists of this SearchResult.
        :type artists: List[Artist]
        """

        self._artists = artists
