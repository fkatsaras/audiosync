# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app.models.artist import Artist  # noqa: F401,E501
from app.models.song import Song  # noqa: F401,E501
from app import util


class SearchResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, song_links: Dict[Song, str] = None, artist_links: Dict[Artist, str] = None):  # noqa: E501
        """SearchResult - a model defined in Swagger

        :param song_links: A dictionary of songs and their corresponding links.  # noqa: E501
        :type song_links: Dict[Song, str]
        :param artist_links: A dictionary of artists and their corresponding links.  # noqa: E501
        :type artist_links: Dict[Artist, str]
        """
        self.swagger_types = {
            'song_links': Dict[Song, str],
            'artist_links': Dict[Artist, str]
        }

        self.attribute_map = {
            'song_links': 'song_links',
            'artist_links': 'artist_links'
        }
        self._song_links = song_links or {}
        self._artist_links = artist_links or {}

    @classmethod
    def from_dict(cls, dikt) -> 'SearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SearchResult of this SearchResult.  # noqa: E501
        :rtype: SearchResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def song_links(self) -> Dict[Song, str]:
        """Gets the song links of this SearchResult.

        A dictionary where keys are Song objects and values are their corresponding links.  # noqa: E501

        :return: The song links of this SearchResult.
        :rtype: Dict[Song, str]
        """
        return self._song_links

    @song_links.setter
    def song_links(self, song_links: Dict[Song, str]):
        """Sets the song links of this SearchResult.

        A dictionary where keys are Song objects and values are their corresponding links.  # noqa: E501

        :param song_links: The song links of this SearchResult.
        :type song_links: Dict[Song, str]
        """
        self._song_links = song_links

    @property
    def artist_links(self) -> Dict[Artist, str]:
        """Gets the artist links of this SearchResult.

        A dictionary where keys are Artist objects and values are their corresponding links.  # noqa: E501

        :return: The artist links of this SearchResult.
        :rtype: Dict[Artist, str]
        """
        return self._artist_links

    @artist_links.setter
    def artist_links(self, artist_links: Dict[Artist, str]):
        """Sets the artist links of this SearchResult.

        A dictionary where keys are Artist objects and values are their corresponding links.  # noqa: E501

        :param artist_links: The artist links of this SearchResult.
        :type artist_links: Dict[Artist, str]
        """
        self._artist_links = artist_links